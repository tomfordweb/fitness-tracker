# Thanks:
# https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching

name: Build and push to dockerhub
on:
  push:
    branches:
      - "main"
jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Setup layer cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Set short sha
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Print short sha
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Build and push frontend
        id: docker_build_frontend
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: tomfordweb/exercise-tracker:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: REACT_APP_CI_BUILD=${{ steps.vars.outputs.sha_short }}

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy-development:
    runs-on: ubuntu-latest
    needs: [build-docker]
    steps:
      - name: Install SSH Key for DEV_SERVER
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEV_SERVER_SSH_KEY }}
          known_hosts: "a-placeholder"

      - name: Add Dev server to known hosts
        run: ssh-keyscan -H ${{ secrets.DEV_SERVER }} >> ~/.ssh/known_hosts

      - name: Login to docker registry
        run: ssh ${{ secrets.DEV_SERVER_USER }}@${{ secrets.DEV_SERVER}} "docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}"

      # - name: Checkout the repo
      #   uses: actions/checkout@v2

      # - name: SCP the file to the server
      #   run: scp docker-compose.yml ${{ secrets.dev_server_user }}@${{ secrets.dev_server}}:/srv/docker/devonwick-clp

      # - name: Pull the project
      #   run: ssh ${{ secrets.dev_server_user }}@${{ secrets.dev_server}} "cd /srv/docker/devonwick-clp && docker-compose pull"

      # - name: Stop the project
      #   run: ssh ${{ secrets.dev_server_user }}@${{ secrets.dev_server}} "cd /srv/docker/devonwick-clp && docker-compose down || true"

      # - name: Start the updated project
      #   run: ssh ${{ secrets.dev_server_user }}@${{ secrets.dev_server}} "docker-compose -f /srv/docker/devonwick-clp/docker-compose.yml up -d"

      # - name: Run migrations
      #   run: ssh ${{ secrets.dev_server_user }}@${{ secrets.dev_server}} "cd /srv/docker/devonwick-clp && docker-compose run --entrypoint alembic backend upgrade head"

      # - name: Move backup script
      #   run: scp backend/backupDatabase ${{ secrets.dev_server_user }}@${{ secrets.dev_server}}:/srv/docker/devonwick-clp

